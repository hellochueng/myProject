package groupthree.myspace.zmh.controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import groupthree.myspace.bean.aldum;
import groupthree.myspace.bean.imgLog;
import groupthree.myspace.bean.person;
import groupthree.myspace.bean.picture;
import groupthree.myspace.zmh.service.impl.PsServiceImpl;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.google.gson.Gson;
@Controller
@RequestMapping(value="/zmhperson",produces="text/plain;charset=utf-8")
public class PsController {
	@Resource(name="zmhPsServiceImpl") PsServiceImpl service;
	

	@RequestMapping(value="/login",method=RequestMethod.POST)
	@ResponseBody
    public String login(HttpServletRequest request,int space,int pwd,Model model){
		person user = service.login(space, pwd);
		if(user!=null){  
			request.getSession().setAttribute("user", user);
			return "ok";
		}else{
			return "buok";
		}
	}
	
	@RequestMapping(value="/show",produces="text/plain;charset=utf-8",method=RequestMethod.GET)
	@ResponseBody 
	public String show(HttpServletRequest request) throws IOException{
		
		//System.out.println(request.getSession().getAttribute("person"));
		return new Gson().toJson(request.getSession().getAttribute("user"));
	}
	
	@RequestMapping(value="/showImgLog",produces="text/plain;charset=utf-8",method=RequestMethod.GET)
	@ResponseBody 
	public String showImgLog(int id,HttpServletRequest request){
		List<imgLog> list=service.getImgLogByPersonId(id);
		//request.getSession().setAttribute("", arg1);
		return new Gson().toJson(list);
	}
	
	@RequestMapping(value="/showAldum",produces="text/plain;charset=utf-8",method=RequestMethod.GET)
	@ResponseBody 
	public String showAldum(HttpServletRequest request){
		person person = (groupthree.myspace.bean.person) request.getSession().getAttribute("user");
		List<aldum> list=service.getAldumAllByPersonId(person.getId());
		return new Gson().toJson(list);
	}
	
	
	@RequestMapping(value="/showPicture",produces="text/plain;charset=utf-8",method=RequestMethod.GET)
	@ResponseBody 
	public String showPicture(int id,HttpServletRequest request){
		List<picture> list=service.getPictureByAldumId(id);
		return new Gson().toJson(list);
	}
	
	@RequestMapping(value="/transfrom",method=RequestMethod.POST)
	@ResponseBody 
	public void transfrom(@RequestParam("file")MultipartFile file,HttpServletRequest request) throws IllegalStateException, IOException{
		 int aldum_id=Integer.parseInt(request.getParameter("id"));
		
		String img=request.getSession().getId()+System.currentTimeMillis();
		System.out.println(img);
		String path=request.getServletContext().getRealPath("zmh/aldumImg");
		//System.out.println(path);
	    file.transferTo(new File(path+"//"+img+".jpg"));
	    service.addPictureInAldum(new picture(9,img,0,"2017-9-8",0,aldum_id));
	   
	}

	
	@RequestMapping(value="/newAldum",method=RequestMethod.POST)
	@ResponseBody 
	public void newAldum(HttpServletRequest request){
		 String aldumName=request.getParameter("aldumName") ;
		 int personId=Integer.parseInt(request.getParameter("id")) ;
		 System.out.println(aldumName);
		 System.out.println(personId);
		 service.addNewAldum(new aldum(10, "2017-9-8",0,0, aldumName, personId));
	}
}
