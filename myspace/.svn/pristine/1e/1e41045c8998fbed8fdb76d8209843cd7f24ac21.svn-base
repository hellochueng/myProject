package groupthree.myspace.lzz.controller;

import groupthree.myspace.bean.person;
import groupthree.myspace.lzz.service.LzzPersonService;

import java.io.File;
import java.io.IOException;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.google.gson.Gson;


@Controller(value="LzzPersonController")
@RequestMapping(value="/personAction",produces="text/plain;charset=utf-8")
public class LzzPersonController {
	@Resource(name="LzzPersonService")LzzPersonService lzzPersonService;
	Gson gson = new Gson();
	
	@ModelAttribute("getPerson")
	public person setPerson(HttpServletRequest request){
		return (person) request.getSession().getAttribute("user");
	}
	
	@RequestMapping(value="/login.do",method=RequestMethod.POST)
	@ResponseBody
	public String login(person person,HttpServletRequest request) {
		person p = lzzPersonService.login(person);
		ServletContext ap = request.getServletContext();
		Map<Integer,String> userList = (Map<Integer, String>) ap.getAttribute("userList");
		if(p!=null){
			if(!userList.containsKey(p.getSpace())){
				p.setBirthday(p.getBirthday().split(" ",9)[0]);
				request.getSession().setAttribute("user",p);
				return "ok";
			}else
				return "in";
		}else
			return "no";
	}
	
	@RequestMapping(value="/setPersonInfo.do")
	@ResponseBody
	public String setPersonInfo(@ModelAttribute("getPerson")person person){
		return gson.toJson(person);
	}
	
	@RequestMapping(value="/register.do")
	@ResponseBody
	public String register(person person){
		person.setSpace((int)(Math.random()*1000000+1));
		String result="";
		if(lzzPersonService.register(person))
			result = "{\"result\":\"ok\",\"space\":\""+person.getSpace()+"\"}";
		else
			result = "{\"result\":\"no\"}";
		return result;
	}
	
	@RequestMapping(value="/changePersonInfo.do",method=RequestMethod.POST)
	@ResponseBody
	public String changePersonInfo(@ModelAttribute("getPerson")person person,
			@RequestParam("imgFile")MultipartFile file,@RequestParam("name")String name,
			@RequestParam("sex")String sex,@RequestParam("signature")String signature,
			@RequestParam("birthday")String birthday,
			HttpServletRequest request) throws IllegalStateException, IOException{
		System.out.println(sex);
		person.setBirthday(birthday);
		person.setName(name);
		person.setSex(sex);
		person.setSignature(signature);
		String path;
		if(file.isEmpty()){	
			path="all/img/1_copy.jpg";
		}else{
			path = request.getServletContext().getRealPath("/lzz/all/img")+"/"+request.getSession().getId()+System.currentTimeMillis()+".jpg";
			file.transferTo(new File(path));
			System.out.println(path);
		}
		person.setImg("all/img/"+request.getSession().getId()+System.currentTimeMillis()+".jpg");
		if(lzzPersonService.changePersonInfo(person)) return "ok";
		else return "no";
	}
}
